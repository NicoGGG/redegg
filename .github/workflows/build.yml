name: CI Build image and push to docker registry

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    container: python:3.11-slim-bookworm
    services:
      db:
        image: postgres:13
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with django test suite
        env:
          POSTGRES_HOST: db
          POSTGRES_PORT: 5432
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: python manage.py test
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: ":white_check_mark: {{ EVENT_PAYLOAD.repository.full_name }} tests succeeded."
      - name: Discord notification
        if: failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: ":red_square: {{ EVENT_PAYLOAD.repository.full_name }} tests failed."
  build:
    needs: test
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY_DOMAIN: ${{ secrets.DOCKER_REGISTRY_DOMAIN }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to private docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_DOMAIN }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set REPO_NAME environment variable
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | cut -d '/' -f 2)" >> $GITHUB_ENV
      - name: Set SHORT_SHA environment variable
        run: echo "SHORT_SHA=$(echo ${GITHUB_SHA::8})" >> $GITHUB_ENV
      - name: Set image name
        run: echo "IMAGE_NAME=$DOCKER_REGISTRY_DOMAIN/$REPO_NAME:$SHORT_SHA" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.IMAGE_NAME }}
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: ":white_check_mark: {{ EVENT_PAYLOAD.repository.full_name }} has been succesfully built."
      - name: Discord notification
        if: failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: ":red_square: {{ EVENT_PAYLOAD.repository.full_name }} has failed to build."

    outputs:
      image_tag: ${{ env.SHORT_SHA }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: registry.nicoboss.me/ansible-repo:latest
      credentials:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Deploy
        run: |
          echo "Deploying ${{ needs.build.outputs.image_tag }} to ${{ secrets.DOCKER_REGISTRY_DOMAIN }}"
          cd /ansible
          echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > vault_pass_file.txt
          ansible-playbook -i hosts deploy_redegg.yml -e "docker_redegg_image_tag=${{ needs.build.outputs.image_tag }}" --vault-password-file vault_pass_file.txt
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: ":white_check_mark: {{ EVENT_PAYLOAD.repository.full_name }} has been succesfully deployed."
      - name: Discord notification
        if: failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: ":red_square: {{ EVENT_PAYLOAD.repository.full_name }} has failed to deploy."
